name: onctl-pr

on:
  pull_request:
    branches:
      - main
    types: [opened, reopened, synchronize, closed]

env:
  # Cloud Provider aws or hetzner
  CLOUD_PROVIDER: ${{ vars.CLOUD_PROVIDER }}
  # Hetzner Cloud Token
  HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
  # AWS Credentials
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
  # Github Token with pull-request write permissions
  # GH_TOKEN: ${{ github.token }}

jobs:
  preview-env:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }} 
          known_hosts: 'dummy'
      - name: Create pub file
        run: |
          echo ${{ secrets.SSH_PUBLIC_KEY }} > ~/.ssh/id_rsa.pub
          cat ~/.ssh/id_rsa
          cat ~/.ssh/id_rsa.pub
      # - name: deploy
      #   if: github.event.action != 'closed'
      #   run: |
      #     onctl create -p 80 
      #     ssh-keyscan $(jq -r '.public_ip' onctl-deploy.json) >> ~/.ssh/known_hosts
      #     DOCKER_HOST=$(jq -r '.docker_host' onctl-deploy.json) docker compose up -d --build
      #     gh pr comment ${{ github.event.pull_request.number }} -b "Deployed to $(jq -r '.public_url' onctl-deploy.json)"
      # - name: destroy
      #   if: github.event.action == 'closed'
      #   run: |
      #     onctl destroy self
      - name: up
        if: github.event.action != 'closed'
        uses: cdalar/onctl-action@v1
        with:
          args: up
        # run: |
        #   onctl up
        #   ssh-keyscan $(jq -r '.public_ip' onctl-deploy.json) >> ~/.ssh/known_hosts
        #   DOCKER_HOST=$(jq -r '.docker_host' onctl-deploy.json) docker compose up -d --build
        #   gh pr comment ${{ github.event.pull_request.number }} -b "Deployed to $(jq -r '.public_url' onctl-deploy.json)"
